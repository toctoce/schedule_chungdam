{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/Desktop/sc_cd/src/ScheduleCd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ScheduleCd.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 7;\nconst numCols = 10;\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(0));\n  }\n  return board;\n};\nconst ScheduleCd = () => {\n  _s();\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputSequence, setInputSequence] = useState(\"\");\n  useEffect(() => {\n    const newBoard = [...board];\n    setBoard(newBoard);\n  }, []);\n  const handleInputChange = value => {\n    setInputSequence(value);\n  };\n  const handleInputSubmit = () => {\n    let result = inputSequence.split(\" \").join(\"\");\n    console.log(result.length);\n    console.log(result);\n    if (result.length === numRows * numCols) {\n      const newBoard = generateEmptyBoard();\n      for (let i = 0; i < result.length; i++) {\n        const inputValue = result[i];\n        const [row, col] = getRowColFromIndex(i);\n        newBoard[row][col] = inputValue;\n      }\n      setBoard(newBoard);\n    } else {\n      console.error(\"Invalid input length. Please enter 25 characters.\");\n    }\n  };\n  const getRowColFromIndex = index => {\n    const row = Math.floor(index / numCols);\n    const col = index % numCols;\n    return [row, col];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ScheduleCd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"mapBoard\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter 25 characters for the board:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: numRows * numCols * 2,\n          value: inputSequence,\n          onChange: e => handleInputChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInputSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ScheduleCd, \"PdfPQVTjdV/XsTWPdWW/rmguu4Y=\");\n_c = ScheduleCd;\nexport default ScheduleCd;\nvar _c;\n$RefreshReg$(_c, \"ScheduleCd\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","numRows","numCols","generateEmptyBoard","board","i","push","Array","fill","ScheduleCd","_s","setBoard","inputSequence","setInputSequence","newBoard","handleInputChange","value","handleInputSubmit","result","split","join","console","log","length","inputValue","row","col","getRowColFromIndex","error","index","Math","floor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","rowIndex","cell","colIndex","type","maxLength","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/macpro/Desktop/sc_cd/src/ScheduleCd.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ScheduleCd.css\";\nconst numRows = 7;\nconst numCols = 10;\n\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(0));\n  }\n  return board;\n};\n\nconst ScheduleCd = () => {\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputSequence, setInputSequence] = useState(\"\");\n\n  useEffect(() => {\n    const newBoard = [...board];\n    setBoard(newBoard);\n  }, []);\n\n  const handleInputChange = (value) => {\n    setInputSequence(value);\n  };\n\n  const handleInputSubmit = () => {\n    let result = inputSequence.split(\" \").join(\"\");\n    console.log(result.length);\n    console.log(result);\n    if (result.length === numRows * numCols) {\n      const newBoard = generateEmptyBoard();\n      for (let i = 0; i < result.length; i++) {\n        const inputValue = result[i];\n        const [row, col] = getRowColFromIndex(i);\n        newBoard[row][col] = inputValue;\n      }\n      setBoard(newBoard);\n    } else {\n      console.error(\"Invalid input length. Please enter 25 characters.\");\n    }\n  };\n\n  const getRowColFromIndex = (index) => {\n    const row = Math.floor(index / numCols);\n    const col = index % numCols;\n    return [row, col];\n  };\n\n  return (\n    <div>\n      <h1>ScheduleCd</h1>\n      <table className=\"mapBoard\">\n        <tbody>\n          {board.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, colIndex) => (\n                <td key={colIndex}>{cell}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div>\n        <label>\n          Enter 25 characters for the board:\n          <input\n            type=\"text\"\n            maxLength={numRows * numCols * 2}\n            value={inputSequence}\n            onChange={(e) => handleInputChange(e.target.value)}\n          />\n          <button onClick={handleInputSubmit}>Submit</button>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default ScheduleCd;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}