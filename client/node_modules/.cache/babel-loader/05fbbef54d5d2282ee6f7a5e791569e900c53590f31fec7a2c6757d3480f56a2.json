{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/Desktop/sc_cd/src/MineSweeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 5;\nconst numCols = 5;\n// const numMines = 5; // 이 부분을 주석 처리하여 지뢰를 배치하지 않습니다.\n\n// 빈 보드를 생성하는 함수\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(\"\"));\n  }\n  return board;\n};\n\n// 보드에 지뢰를 무작위로 배치하는 함수\n// const placeMines = (board) => {\n//   let minesPlaced = 0;\n//   while (minesPlaced < numMines) {\n//     const row = Math.floor(Math.random() * numRows);\n//     const col = Math.floor(Math.random() * numCols);\n//     if (board[row][col] !== 'M') {\n//       board[row][col] = 'M';\n//       minesPlaced++;\n//     }\n//   }\n// };\n\n// 특정 셀 주변의 지뢰 개수를 계산하는 함수\nconst countAdjacentMines = (board, row, col) => {\n  const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  let count = 0;\n  for (const [dx, dy] of directions) {\n    const newRow = row + dx;\n    const newCol = col + dy;\n    if (newRow >= 0 && newRow < numRows && newCol >= 0 && newCol < numCols) {\n      if (board[newRow][newCol] === \"M\") {\n        count++;\n      }\n    }\n  }\n  return count;\n};\n\n// Minesweeper 게임 컴포넌트\nconst Minesweeper = () => {\n  _s();\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputA, setInputA] = useState(\"\");\n  const [inputB, setInputB] = useState(\"\");\n  const [inputC, setInputC] = useState(\"\");\n  const [inputD, setInputD] = useState(\"\");\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때 보드를 초기화하고 지뢰를 배치하지 않습니다.\n    const newBoard = [...board];\n    // placeMines(newBoard); // 이 부분을 주석 처리하여 지뢰를 배치하지 않습니다.\n    setBoard(newBoard);\n  }, []);\n  const handleCellClick = (row, col) => {\n    // 클릭 이벤트 처리 로직\n    // TODO: 여기에 클릭 이벤트 처리 로직을 추가하세요.\n    // 현재는 클릭한 셀의 좌표만 콘솔에 출력하는 예시입니다.\n    console.log(`Clicked on cell (${row}, ${col})`);\n  };\n  const handleInputChange = (variable, value) => {\n    // 입력값이 변경될 때 호출되는 함수\n    switch (variable) {\n      case \"A\":\n        setInputA(value);\n        break;\n      case \"B\":\n        setInputB(value);\n        break;\n      case \"C\":\n        setInputC(value);\n        break;\n      case \"D\":\n        setInputD(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleInputSubmit = variable => {\n    // 변수의 입력값을 좌표로 변환하여 배열에 저장하는 함수\n    const newBoard = [...board];\n    const value = getCoordinateFromInput(variable);\n    if (value) {\n      const [row, col] = value;\n      newBoard[row][col] = variable;\n      setBoard(newBoard);\n    }\n  };\n  const getCoordinateFromInput = variable => {\n    // 입력값을 좌표로 변환하는 함수\n    const input = getVariableInput(variable);\n    if (input && input.length === 2) {\n      const row = parseInt(input[0], 10);\n      const col = parseInt(input[1], 10);\n      if (!isNaN(row) && !isNaN(col) && row >= 0 && row < numRows && col >= 0 && col < numCols) {\n        return [row, col];\n      }\n    }\n    console.error(`Invalid input for ${variable}`);\n    return null;\n  };\n  const getVariableInput = variable => {\n    // 변수의 입력값을 가져오는 함수\n    switch (variable) {\n      case \"A\":\n        return inputA;\n      case \"B\":\n        return inputB;\n      case \"C\":\n        return inputC;\n      case \"D\":\n        return inputD;\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minesweeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleCellClick(rowIndex, colIndex),\n            children: cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter A's coordinates:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputA,\n          onChange: e => handleInputChange(\"A\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInputSubmit(\"A\"),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter B's coordinates:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputB,\n          onChange: e => handleInputChange(\"B\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInputSubmit(\"B\"),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter C's coordinates:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputC,\n          onChange: e => handleInputChange(\"C\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInputSubmit(\"C\"),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter D's coordinates:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputD,\n          onChange: e => handleInputChange(\"D\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleInputSubmit(\"D\"),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Minesweeper, \"NxTt2mESB0j51ButRzU522OPBxg=\");\n_c = Minesweeper;\nexport default Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","numRows","numCols","generateEmptyBoard","board","i","push","Array","fill","countAdjacentMines","row","col","directions","count","dx","dy","newRow","newCol","Minesweeper","_s","setBoard","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","newBoard","handleCellClick","console","log","handleInputChange","variable","value","handleInputSubmit","getCoordinateFromInput","input","getVariableInput","length","parseInt","isNaN","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","cell","colIndex","onClick","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/macpro/Desktop/sc_cd/src/MineSweeper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst numRows = 5;\nconst numCols = 5;\n// const numMines = 5; // 이 부분을 주석 처리하여 지뢰를 배치하지 않습니다.\n\n// 빈 보드를 생성하는 함수\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(\"\"));\n  }\n  return board;\n};\n\n// 보드에 지뢰를 무작위로 배치하는 함수\n// const placeMines = (board) => {\n//   let minesPlaced = 0;\n//   while (minesPlaced < numMines) {\n//     const row = Math.floor(Math.random() * numRows);\n//     const col = Math.floor(Math.random() * numCols);\n//     if (board[row][col] !== 'M') {\n//       board[row][col] = 'M';\n//       minesPlaced++;\n//     }\n//   }\n// };\n\n// 특정 셀 주변의 지뢰 개수를 계산하는 함수\nconst countAdjacentMines = (board, row, col) => {\n  const directions = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  let count = 0;\n  for (const [dx, dy] of directions) {\n    const newRow = row + dx;\n    const newCol = col + dy;\n    if (newRow >= 0 && newRow < numRows && newCol >= 0 && newCol < numCols) {\n      if (board[newRow][newCol] === \"M\") {\n        count++;\n      }\n    }\n  }\n\n  return count;\n};\n\n// Minesweeper 게임 컴포넌트\nconst Minesweeper = () => {\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputA, setInputA] = useState(\"\");\n  const [inputB, setInputB] = useState(\"\");\n  const [inputC, setInputC] = useState(\"\");\n  const [inputD, setInputD] = useState(\"\");\n\n  useEffect(() => {\n    // 컴포넌트가 마운트될 때 보드를 초기화하고 지뢰를 배치하지 않습니다.\n    const newBoard = [...board];\n    // placeMines(newBoard); // 이 부분을 주석 처리하여 지뢰를 배치하지 않습니다.\n    setBoard(newBoard);\n  }, []);\n\n  const handleCellClick = (row, col) => {\n    // 클릭 이벤트 처리 로직\n    // TODO: 여기에 클릭 이벤트 처리 로직을 추가하세요.\n    // 현재는 클릭한 셀의 좌표만 콘솔에 출력하는 예시입니다.\n    console.log(`Clicked on cell (${row}, ${col})`);\n  };\n\n  const handleInputChange = (variable, value) => {\n    // 입력값이 변경될 때 호출되는 함수\n    switch (variable) {\n      case \"A\":\n        setInputA(value);\n        break;\n      case \"B\":\n        setInputB(value);\n        break;\n      case \"C\":\n        setInputC(value);\n        break;\n      case \"D\":\n        setInputD(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleInputSubmit = (variable) => {\n    // 변수의 입력값을 좌표로 변환하여 배열에 저장하는 함수\n    const newBoard = [...board];\n    const value = getCoordinateFromInput(variable);\n    if (value) {\n      const [row, col] = value;\n      newBoard[row][col] = variable;\n      setBoard(newBoard);\n    }\n  };\n\n  const getCoordinateFromInput = (variable) => {\n    // 입력값을 좌표로 변환하는 함수\n    const input = getVariableInput(variable);\n    if (input && input.length === 2) {\n      const row = parseInt(input[0], 10);\n      const col = parseInt(input[1], 10);\n      if (\n        !isNaN(row) &&\n        !isNaN(col) &&\n        row >= 0 &&\n        row < numRows &&\n        col >= 0 &&\n        col < numCols\n      ) {\n        return [row, col];\n      }\n    }\n    console.error(`Invalid input for ${variable}`);\n    return null;\n  };\n\n  const getVariableInput = (variable) => {\n    // 변수의 입력값을 가져오는 함수\n    switch (variable) {\n      case \"A\":\n        return inputA;\n      case \"B\":\n        return inputB;\n      case \"C\":\n        return inputC;\n      case \"D\":\n        return inputD;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div>\n      <h1>Minesweeper</h1>\n      <table>\n        <tbody>\n          {board.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, colIndex) => (\n                <td\n                  key={colIndex}\n                  onClick={() => handleCellClick(rowIndex, colIndex)}\n                >\n                  {cell}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* A 변수 입력 폼 */}\n      <div>\n        <label>\n          Enter A's coordinates:\n          <input\n            type=\"text\"\n            value={inputA}\n            onChange={(e) => handleInputChange(\"A\", e.target.value)}\n          />\n          <button onClick={() => handleInputSubmit(\"A\")}>Submit</button>\n        </label>\n      </div>\n\n      {/* B 변수 입력 폼 */}\n      <div>\n        <label>\n          Enter B's coordinates:\n          <input\n            type=\"text\"\n            value={inputB}\n            onChange={(e) => handleInputChange(\"B\", e.target.value)}\n          />\n          <button onClick={() => handleInputSubmit(\"B\")}>Submit</button>\n        </label>\n      </div>\n\n      {/* C 변수 입력 폼 */}\n      <div>\n        <label>\n          Enter C's coordinates:\n          <input\n            type=\"text\"\n            value={inputC}\n            onChange={(e) => handleInputChange(\"C\", e.target.value)}\n          />\n          <button onClick={() => handleInputSubmit(\"C\")}>Submit</button>\n        </label>\n      </div>\n\n      {/* D 변수 입력 폼 */}\n      <div>\n        <label>\n          Enter D's coordinates:\n          <input\n            type=\"text\"\n            value={inputD}\n            onChange={(e) => handleInputChange(\"D\", e.target.value)}\n          />\n          <button onClick={() => handleInputSubmit(\"D\")}>Submit</button>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Minesweeper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}