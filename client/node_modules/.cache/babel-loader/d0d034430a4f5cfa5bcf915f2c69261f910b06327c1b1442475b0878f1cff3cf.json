{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/Desktop/sc_cd/src/MineSweeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 5;\nconst numCols = 5;\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(0));\n  }\n  return board;\n};\nconst countAdjacentMines = (board, row, col) => {\n  const directions = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n  let count = 0;\n  for (const [dx, dy] of directions) {\n    const newRow = row + dx;\n    const newCol = col + dy;\n    if (newRow >= 0 && newRow < numRows && newCol >= 0 && newCol < numCols) {\n      if (board[newRow][newCol] === \"M\") {\n        count++;\n      }\n    }\n  }\n  return count;\n};\nconst Minesweeper = () => {\n  _s();\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputSequence, setInputSequence] = useState(\"\");\n  const [inputIndex, setInputIndex] = useState(0);\n  useEffect(() => {\n    const newBoard = [...board];\n    setBoard(newBoard);\n  }, []);\n  const handleCellClick = (row, col) => {\n    console.log(`Clicked on cell (${row}, ${col})`);\n  };\n  const handleInputChange = value => {\n    setInputSequence(value);\n  };\n  const handleInputSubmit = () => {\n    const newBoard = [...board];\n    const inputValue = inputSequence[inputIndex];\n    if (inputValue) {\n      const [row, col] = getRowColFromIndex(inputIndex);\n      newBoard[row][col] = inputValue;\n      setBoard(newBoard);\n      setInputIndex(inputIndex + 1);\n    }\n  };\n  const getRowColFromIndex = index => {\n    const row = Math.floor(index / numCols);\n    const col = index % numCols;\n    return [row, col];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minesweeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleCellClick(rowIndex, colIndex),\n            children: cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter sequence of values (length should be 25):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputSequence,\n          onChange: e => handleInputChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInputSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Minesweeper, \"4GksH6bGflk29vMJMoA0BhbgNhs=\");\n_c = Minesweeper;\nexport default Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","numRows","numCols","generateEmptyBoard","board","i","push","Array","fill","countAdjacentMines","row","col","directions","count","dx","dy","newRow","newCol","Minesweeper","_s","setBoard","inputSequence","setInputSequence","inputIndex","setInputIndex","newBoard","handleCellClick","console","log","handleInputChange","value","handleInputSubmit","inputValue","getRowColFromIndex","index","Math","floor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","cell","colIndex","onClick","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/macpro/Desktop/sc_cd/src/MineSweeper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst numRows = 5;\nconst numCols = 5;\n\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(0));\n  }\n  return board;\n};\n\nconst countAdjacentMines = (board, row, col) => {\n  const directions = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  let count = 0;\n  for (const [dx, dy] of directions) {\n    const newRow = row + dx;\n    const newCol = col + dy;\n    if (newRow >= 0 && newRow < numRows && newCol >= 0 && newCol < numCols) {\n      if (board[newRow][newCol] === \"M\") {\n        count++;\n      }\n    }\n  }\n\n  return count;\n};\n\nconst Minesweeper = () => {\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputSequence, setInputSequence] = useState(\"\");\n  const [inputIndex, setInputIndex] = useState(0);\n\n  useEffect(() => {\n    const newBoard = [...board];\n    setBoard(newBoard);\n  }, []);\n\n  const handleCellClick = (row, col) => {\n    console.log(`Clicked on cell (${row}, ${col})`);\n  };\n\n  const handleInputChange = (value) => {\n    setInputSequence(value);\n  };\n\n  const handleInputSubmit = () => {\n    const newBoard = [...board];\n    const inputValue = inputSequence[inputIndex];\n    if (inputValue) {\n      const [row, col] = getRowColFromIndex(inputIndex);\n      newBoard[row][col] = inputValue;\n      setBoard(newBoard);\n      setInputIndex(inputIndex + 1);\n    }\n  };\n\n  const getRowColFromIndex = (index) => {\n    const row = Math.floor(index / numCols);\n    const col = index % numCols;\n    return [row, col];\n  };\n\n  return (\n    <div>\n      <h1>Minesweeper</h1>\n      <table>\n        <tbody>\n          {board.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, colIndex) => (\n                <td\n                  key={colIndex}\n                  onClick={() => handleCellClick(rowIndex, colIndex)}\n                >\n                  {cell}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div>\n        <label>\n          Enter sequence of values (length should be 25):\n          <input\n            type=\"text\"\n            value={inputSequence}\n            onChange={(e) => handleInputChange(e.target.value)}\n          />\n          <button onClick={handleInputSubmit}>Submit</button>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Minesweeper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}