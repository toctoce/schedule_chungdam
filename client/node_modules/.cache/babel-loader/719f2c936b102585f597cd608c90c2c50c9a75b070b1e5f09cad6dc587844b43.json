{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/Desktop/sc_cd/src/MineSweeper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 5;\nconst numCols = 5;\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(0));\n  }\n  return board;\n};\nconst Minesweeper = () => {\n  _s();\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputSequence, setInputSequence] = useState(\"\");\n  useEffect(() => {\n    const newBoard = [...board];\n    setBoard(newBoard);\n  }, []);\n  const handleCellClick = (row, col) => {\n    console.log(`Clicked on cell (${row}, ${col})`);\n  };\n  const handleInputChange = value => {\n    setInputSequence(value);\n  };\n  const handleInputSubmit = () => {\n    if (inputSequence.length === numRows * numCols) {\n      const newBoard = generateEmptyBoard();\n      for (let i = 0; i < inputSequence.length; i++) {\n        const inputValue = inputSequence[i];\n        const [row, col] = getRowColFromIndex(i);\n        newBoard[row][col] = inputValue;\n      }\n      setBoard(newBoard);\n    } else {\n      console.error(\"Invalid input length. Please enter 25 characters.\");\n    }\n  };\n  const getRowColFromIndex = index => {\n    const row = Math.floor(index / numCols);\n    const col = index % numCols;\n    return [row, col];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Minesweeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => handleCellClick(rowIndex, colIndex),\n            children: cell\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter 25 characters for the board:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: numRows * numCols,\n          value: inputSequence,\n          onChange: e => handleInputChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInputSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Minesweeper, \"PdfPQVTjdV/XsTWPdWW/rmguu4Y=\");\n_c = Minesweeper;\nexport default Minesweeper;\nvar _c;\n$RefreshReg$(_c, \"Minesweeper\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","numRows","numCols","generateEmptyBoard","board","i","push","Array","fill","Minesweeper","_s","setBoard","inputSequence","setInputSequence","newBoard","handleCellClick","row","col","console","log","handleInputChange","value","handleInputSubmit","length","inputValue","getRowColFromIndex","error","index","Math","floor","children","fileName","_jsxFileName","lineNumber","columnNumber","map","rowIndex","cell","colIndex","onClick","type","maxLength","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/macpro/Desktop/sc_cd/src/MineSweeper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst numRows = 5;\nconst numCols = 5;\n\nconst generateEmptyBoard = () => {\n  const board = [];\n  for (let i = 0; i < numRows; i++) {\n    board.push(Array(numCols).fill(0));\n  }\n  return board;\n};\n\nconst Minesweeper = () => {\n  const [board, setBoard] = useState(generateEmptyBoard());\n  const [inputSequence, setInputSequence] = useState(\"\");\n\n  useEffect(() => {\n    const newBoard = [...board];\n    setBoard(newBoard);\n  }, []);\n\n  const handleCellClick = (row, col) => {\n    console.log(`Clicked on cell (${row}, ${col})`);\n  };\n\n  const handleInputChange = (value) => {\n    setInputSequence(value);\n  };\n\n  const handleInputSubmit = () => {\n    if (inputSequence.length === numRows * numCols) {\n      const newBoard = generateEmptyBoard();\n      for (let i = 0; i < inputSequence.length; i++) {\n        const inputValue = inputSequence[i];\n        const [row, col] = getRowColFromIndex(i);\n        newBoard[row][col] = inputValue;\n      }\n      setBoard(newBoard);\n    } else {\n      console.error(\"Invalid input length. Please enter 25 characters.\");\n    }\n  };\n\n  const getRowColFromIndex = (index) => {\n    const row = Math.floor(index / numCols);\n    const col = index % numCols;\n    return [row, col];\n  };\n\n  return (\n    <div>\n      <h1>Minesweeper</h1>\n      <table>\n        <tbody>\n          {board.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, colIndex) => (\n                <td\n                  key={colIndex}\n                  onClick={() => handleCellClick(rowIndex, colIndex)}\n                >\n                  {cell}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      <div>\n        <label>\n          Enter 25 characters for the board:\n          <input\n            type=\"text\"\n            maxLength={numRows * numCols}\n            value={inputSequence}\n            onChange={(e) => handleInputChange(e.target.value)}\n          />\n          <button onClick={handleInputSubmit}>Submit</button>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Minesweeper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}